{
    "swagger":"2.0",
    "info":{
       "version":"1.0",
       "title":"APi de cadastro de livros",
       "description":"Essa API tem como foco principal fazer o cadastro de livros, categorias e autores.",
       "contact":{
          "name":"Guilherme Hendres",
          "email":"ghendressmelo@gmail.com"
       }
    },
    "host":"127.0.0.1:3000",
    "basePath":"/datasnap/rest/TServerMethods1/",
    "schemes":[
       "http"
    ],
    "paths":{
       "/api/books":{
          "post":{
             "summary":"Cadastro de livros.",
             "description":"Esta rota será responsável por cadastrar livros.",
             "tags":[
                "Books"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                {
                   "name":"title",
                   "in":"formData",
                   "description":"Título do livro.",
                   "required":true,
                   "type":"string"
                },
                {
                   "name":"description",
                   "in":"formData",
                   "description":"Descrição do livro.",
                   "required":true,
                   "type":"string"
                },
                {
                   "name":"author",
                   "in":"formData",
                   "description":"Autor responsável pelo livro.",
                   "required":true,
                   "type":"integer",
                   "format":"int64"
                },
                {
                   "name":"category",
                   "in":"formData",
                   "description":"Categoria em que o livro pertence.",
                   "required":true,
                   "type":"integer",
                   "format":"int64"
                }
             ],
             "responses":{
                "200":{
                   "description":"Livro criado com sucesso."
                }
             }
          },
          "get":{
             "summary":"Listagem de livros.",
             "description":"Esta rota será responsável por listar livros.",
             "tags":[
                "Books"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                
             ],
             "responses":{
                "200":{
                   "schema":{
                      "$ref":"#/components/schemas/Books"
                   }
                }
             }
          }
       },
       "/api/books/{bookId}":{
          "get":{
             "summary":"Listagem de livros pelo ID.",
             "description":"Esta rota será responsável por listar um livro pelo ID.",
             "tags":[
                "Books"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                {
                   "name":"bookId",
                   "in":"path",
                   "description":"ID do livro a ser buscado.",
                   "required":true,
                   "type":"integer",
                   "format":"int64"
                }
             ],
             "responses":{
                "200":{
                   "schema":{
                      "$ref":"#/components/schemas/Books"
                   }
                }
             }
          },
          "put":{
             "tags":[
                "Books"
             ],
             "summary":"Atualizar um livro existente pelo ID.",
             "consumes":[
                "application/json"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                {
                   "name":"bookId",
                   "in":"path",
                   "description":"ID do livro a ser buscado.",
                   "required":true,
                   "type":"integer",
                   "format":"int64"
                },
                {
                   "in":"body",
                   "name":"body",
                   "description":"Objeto do livro que vai ser adicionado na edição.",
                   "required":true,
                   "schema":{
                      "$ref":"#/components/schemas/BooksWithNoID"
                   }
                }
             ],
             "responses":{
                "200":{
                   "schema":{
                      "description":"Livro atualizado",
                      "$ref":"#/components/schemas/BooksWithNoID"
                   }
                }
             }
          },
          "delete":{
             "tags":[
                "Books"
             ],
             "summary":"Deleta um livro pelo ID.",
             "consumes":[
                "application/json"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                {
                   "name":"bookId",
                   "in":"path",
                   "description":"ID do livro a ser deletado.",
                   "required":true,
                   "type":"integer",
                   "format":"int64"
                }
             ],
             "responses":{
                "200":{
                    "description":"Livro deletado com sucesso."
                }
             }
          }
       },
       "/api/authors":{
          "post":{
             "summary":"Cadastro de autores.",
             "description":"Esta rota será responsável por cadastrar autores.",
             "tags":[
                "Authors"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                {
                   "name":"name",
                   "in":"formData",
                   "description":"Nome do autor.",
                   "required":true,
                   "type":"string"
                },
                {
                   "name":"bio",
                   "in":"formData",
                   "description":"Biografia do autor.",
                   "required":true,
                   "type":"string"
                },
                {
                   "name":"birthdate ",
                   "in":"formData",
                   "description":"Data de nascimento do autor.",
                   "required":true,
                   "type":"date-time"
                }
             ],
             "responses":{
                "200":{
                   "description":"Autor criado com sucesso."
                }
             }
          },
          "get":{
             "summary":"Listagem de Autores.",
             "description":"Esta rota será responsável por listar autores.",
             "tags":[
                "Authors"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                
             ],
             "responses":{
                "200":{
                   "schema":{
                      "$ref":"#/components/schemas/Authors"
                   }
                }
             }
          }
       },
       "/api/authors/{authorId}":{
          "get":{
             "summary":"Listagem de autores pelo ID.",
             "description":"Esta rota será responsável por listar um autor pelo ID.",
             "tags":[
                "Authors"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                {
                   "name":"authorId",
                   "in":"path",
                   "description":"ID do autor a ser buscado.",
                   "required":true,
                   "type":"integer",
                   "format":"int64"
                }
             ],
             "responses":{
                "200":{
                   "schema":{
                      "$ref":"#/components/schemas/Authors"
                   }
                }
             }
          },
          "put":{
             "tags":[
                "Authors"
             ],
             "summary":"Atualizar um autor existente pelo ID.",
             "consumes":[
                "application/json"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                {
                   "name":"authorId",
                   "in":"path",
                   "description":"ID do autor a ser buscado.",
                   "required":true,
                   "type":"integer",
                   "format":"int64"
                },
                {
                   "in":"body",
                   "name":"body",
                   "description":"Objeto do autor que vai ser adicionado na edição.",
                   "required":true,
                   "schema":{
                      "$ref":"#/components/schemas/AuthorsWithNoID"
                   }
                }
             ],
             "responses":{
                "200":{
                   "schema":{
                      "description":"Autor atualizado",
                      "$ref":"#/components/schemas/AuthorsWithNoID"
                   }
                }
             }
          },
          "delete":{
             "tags":[
                "Authors"
             ],
             "summary":"Deleta um autor pelo ID.",
             "consumes":[
                "application/json"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                {
                   "name":"authorId",
                   "in":"path",
                   "description":"ID do autor a ser deletado.",
                   "required":true,
                   "type":"integer",
                   "format":"int64"
                }
             ],
             "responses":{
                "200":{
                    "description":"Autor deletado com sucesso."
                }
             }
          }
       },
       "/api/categories":{
          "post":{
             "summary":"Cadastro de categorias.",
             "description":"Esta rota será responsável por cadastrar categorias.",
             "tags":[
                "Categories"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                {
                   "name":"name",
                   "in":"formData",
                   "description":"Título da categoria.",
                   "required":true,
                   "type":"string"
                },
                {
                   "name":"description",
                   "in":"formData",
                   "description":"Descrição da categoria.",
                   "required":true,
                   "type":"string"
                }
             ],
             "responses":{
                "200":{
                   "description":"Categoria criada com sucesso."
                }
             }
          },
          "get":{
             "summary":"Listagem de categorias.",
             "description":"Esta rota será responsável por listar categorias.",
             "tags":[
                "Categories"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                
             ],
             "responses":{
                "200":{
                   "schema":{
                      "$ref":"#/components/schemas/Categories"
                   }
                }
             }
          }
       },
       "/api/categories/{categoryId}":{
          "get":{
             "summary":"Listagem de categorias pelo ID.",
             "description":"Esta rota será responsável por listar uma categoria pelo ID.",
             "tags":[
                "Categories"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                {
                   "name":"categoryId",
                   "in":"path",
                   "description":"ID da categoria a ser buscada.",
                   "required":true,
                   "type":"integer",
                   "format":"int64"
                }
             ],
             "responses":{
                "200":{
                   "schema":{
                      "$ref":"#/components/schemas/Categories"
                   }
                }
             }
          },
          "put":{
             "tags":[
                "Categories"
             ],
             "summary":"Atualizar uma categoria existente pelo ID.",
             "consumes":[
                "application/json"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                {
                   "name":"categoryId",
                   "in":"path",
                   "description":"ID da categoria a ser buscada.",
                   "required":true,
                   "type":"integer",
                   "format":"int64"
                },
                {
                   "in":"body",
                   "name":"body",
                   "description":"Objeto da categoria que vai ser adicionado na edição.",
                   "required":true,
                   "schema":{
                      "$ref":"#/components/schemas/CategoriesWithNoID"
                   }
                }
             ],
             "responses":{
                "200":{
                   "schema":{
                      "description":"Categoria atualizada",
                      "$ref":"#/components/schemas/CategoriesWithNoID"
                   }
                }
             }
          },
          "delete":{
             "tags":[
                "Categories"
             ],
             "summary":"Deleta uma categoria pelo ID.",
             "consumes":[
                "application/json"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                {
                   "name":"categoryId",
                   "in":"path",
                   "description":"ID da categoria a ser deletada.",
                   "required":true,
                   "type":"integer",
                   "format":"int64"
                }
             ],
             "responses":{
                "200":{
                    "description":"Categoria deletada com sucesso."
                }
             }
          }
       }
    },
    "components":{
       "schemas":{
          "Books":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "format":"int64"
                },
                "title":{
                   "type":"string"
                },
                "description":{
                   "type":"string"
                },
                "author":{
                   "type":"integer",
                   "format":"int64"
                },
                "category":{
                   "type":"integer",
                   "format":"int64"
                },
                "publishDate":{
                   "type":"string",
                   "format":"date-time"
                },
                "created_at":{
                   "type":"string",
                   "format":"date-time"
                },
                "updated_at":{
                   "type":"string",
                   "format":"date-time"
                },
                "deleted_at":{
                   "type":"string",
                   "format":"date-time"
                }
             }
          },
          "BooksWithNoID":{
             "type":"object",
             "properties":{
                "title":{
                   "type":"string"
                },
                "description":{
                   "type":"string"
                },
                "author":{
                   "type":"integer",
                   "format":"int64"
                },
                "category":{
                   "type":"integer",
                   "format":"int64"
                },
                "publishDate":{
                   "type":"string",
                   "format":"date-time"
                },
                "updated_at":{
                   "type":"string",
                   "format":"date-time"
                }
             }
          },
          "Authors":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "format":"int64"
                },
                "name":{
                   "type":"string"
                },
                "bio":{
                   "type":"string"
                },
                "birthdate":{
                   "type":"string",
                   "format":"date-time"
                },
                "created_at":{
                   "type":"string",
                   "format":"date-time"
                },
                "updated_at":{
                   "type":"string",
                   "format":"date-time"
                },
                "deleted_at":{
                   "type":"string",
                   "format":"date-time"
                }
             }
          },
          "AuthorsWithNoID":{
             "type":"object",
             "properties":{
                "name":{
                   "type":"string"
                },
                "bio":{
                   "type":"string"
                },
                "birthdate":{
                   "type":"string",
                   "format":"date-time"
                },
                "updated_at":{
                   "type":"string",
                   "format":"date-time"
                }
             }
          },
          "Categories":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"integer",
                   "format":"int64"
                },
                "name":{
                   "type":"string"
                },
                "description":{
                   "type":"string"
                },
                "created_at":{
                   "type":"string",
                   "format":"date-time"
                },
                "updated_at":{
                   "type":"string",
                   "format":"date-time"
                },
                "deleted_at":{
                   "type":"string",
                   "format":"date-time"
                }
             }
          },
          "CategoriesWithNoID":{
             "type":"object",
             "properties":{
                "name":{
                   "type":"string"
                },
                "description":{
                   "type":"string"
                },
                "updated_at":{
                   "type":"string",
                   "format":"date-time"
                }
             }
          }
       }
    }
 }